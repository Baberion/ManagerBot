"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enumerableMethod = exports.EnumerableMethod = exports.enumerable = exports.Enumerable = void 0;
const utils_1 = require("./utils");
/**
 * Decorator that sets the enumerable property of a class field to the desired value.
 * @param value Whether the property should be enumerable or not
 */
function Enumerable(value) {
    return (target, key) => {
        Reflect.defineProperty(target, key, {
            enumerable: value,
            set(val) {
                Reflect.defineProperty(this, key, {
                    configurable: true,
                    enumerable: value,
                    value: val,
                    writable: true
                });
            }
        });
    };
}
exports.Enumerable = Enumerable;
/**
 * Decorator that sets the enumerable property of a class field to the desired value.
 * @param value Whether the property should be enumerable or not
 * @deprecated Use `@Enumerable` instead.
 * The lowercased decorator will be removed in the next major version of `@sapphire/decorators`
 */
exports.enumerable = Enumerable;
/**
 * Decorator that sets the enumerable property of a class method to the desired value.
 * @param value Whether the method should be enumerable or not
 */
function EnumerableMethod(value) {
    return (0, utils_1.createMethodDecorator)((_target, _propertyKey, descriptor) => {
        descriptor.enumerable = value;
    });
}
exports.EnumerableMethod = EnumerableMethod;
/**
 * Decorator that sets the enumerable property of a class method to the desired value.
 * @param value Whether the method should be enumerable or not
 * @deprecated Use `@EnumerableMethod` instead.
 * The lowercased decorator will be removed in the next major version of `@sapphire/decorators`
 */
exports.enumerableMethod = EnumerableMethod;
//# sourceMappingURL=base-decorators.js.map