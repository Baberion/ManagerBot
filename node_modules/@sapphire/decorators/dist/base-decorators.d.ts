/**
 * Decorator that sets the enumerable property of a class field to the desired value.
 * @param value Whether the property should be enumerable or not
 */
export declare function Enumerable(value: boolean): (target: unknown, key: string) => void;
/**
 * Decorator that sets the enumerable property of a class field to the desired value.
 * @param value Whether the property should be enumerable or not
 * @deprecated Use `@Enumerable` instead.
 * The lowercased decorator will be removed in the next major version of `@sapphire/decorators`
 */
export declare const enumerable: typeof Enumerable;
/**
 * Decorator that sets the enumerable property of a class method to the desired value.
 * @param value Whether the method should be enumerable or not
 */
export declare function EnumerableMethod(value: boolean): MethodDecorator;
/**
 * Decorator that sets the enumerable property of a class method to the desired value.
 * @param value Whether the method should be enumerable or not
 * @deprecated Use `@EnumerableMethod` instead.
 * The lowercased decorator will be removed in the next major version of `@sapphire/decorators`
 */
export declare const enumerableMethod: typeof EnumerableMethod;
//# sourceMappingURL=base-decorators.d.ts.map