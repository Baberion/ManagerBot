import { Message, MessageOptions, ReplyMessageOptions, WebhookMessageOptions } from 'discord.js';
/**
 * Tracks a response with a message, in a way that if {@link send} is called with `message`, `response` will be edited.
 * @param message The message to track when editing.
 * @param response The response to edit when using send with `message`.
 */
export declare function track(message: Message, response: Message): void;
/**
 * Removes the tracked response for `message`.
 * @param message The message to free from tracking.
 * @returns Whether the message was tracked.
 */
export declare function free(message: Message): boolean;
/**
 * Gets the tracked response to `message`, if any was tracked and was not deleted.
 * @param message The message to get the reply from.
 * @returns The replied message, if any.
 */
export declare function get(message: Message): Message | null;
/**
 * Sends a message as a response for `message`, and tracks it.
 * @param message The message to replies to.
 * @param options The options for the message sending, identical to `TextBasedChannel#send`'s options.
 * @returns The response message.
 */
export declare function send(message: Message, options: string | Options): Promise<Message>;
/**
 * Sends a reply message as a response for `message`, and tracks it.
 * @param message The message to replies to.
 * @param options The options for the message sending, identical to `TextBasedChannel#send`'s options.
 * @returns The response message.
 */
export declare function reply(message: Message, options: string | ReplyMessageOptions): Promise<Message>;
declare type Options = MessageOptions | WebhookMessageOptions;
export {};
//# sourceMappingURL=index.d.ts.map